<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lou.springboot.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.lou.springboot.entity.Blog">
    <id column="blog_id" jdbcType="BIGINT" property="blogId" />
    <result column="blog_title" jdbcType="VARCHAR" property="blogTitle" />
    <result column="blog_sub_url" jdbcType="VARCHAR" property="blogSubUrl" />
    <result column="blog_cover_image" jdbcType="VARCHAR" property="blogCoverImage" />
    <result column="blog_category_id" jdbcType="INTEGER" property="blogCategoryId" />
    <result column="blog_category_name" jdbcType="VARCHAR" property="blogCategoryName" />
    <result column="blog_tags" jdbcType="VARCHAR" property="blogTags" />
    <result column="blog_status" jdbcType="TINYINT" property="blogStatus" />
    <result column="blog_views" jdbcType="BIGINT" property="blogViews" />
    <result column="enable_comment" jdbcType="TINYINT" property="enableComment" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.lou.springboot.entity.Blog">
    <result column="blog_content" jdbcType="LONGVARCHAR" property="blogContent" />
  </resultMap>
  <sql id="Base_Column_List">
    blog_id, blog_title, blog_sub_url, blog_cover_image, blog_category_id, blog_category_name,
    blog_tags, blog_status, blog_views, enable_comment, is_deleted, create_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    blog_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_blog
    where blog_id = #{blogId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_blog
    where blog_id = #{blogId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lou.springboot.entity.Blog">
    insert into tb_blog (blog_id, blog_title, blog_sub_url,
      blog_cover_image, blog_category_id, blog_category_name,
      blog_tags, blog_status, blog_views,
      enable_comment, is_deleted, create_time,
      update_time, blog_content)
    values (#{blogId,jdbcType=BIGINT}, #{blogTitle,jdbcType=VARCHAR}, #{blogSubUrl,jdbcType=VARCHAR},
      #{blogCoverImage,jdbcType=VARCHAR}, #{blogCategoryId,jdbcType=INTEGER}, #{blogCategoryName,jdbcType=VARCHAR},
      #{blogTags,jdbcType=VARCHAR}, #{blogStatus,jdbcType=TINYINT}, #{blogViews,jdbcType=BIGINT},
      #{enableComment,jdbcType=TINYINT}, #{isDeleted,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{blogContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="blogId"  parameterType="com.lou.springboot.entity.Blog">
    insert into tb_blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="blogTitle != null">
        blog_title,
      </if>
      <if test="blogSubUrl != null">
        blog_sub_url,
      </if>
      <if test="blogCoverImage != null">
        blog_cover_image,
      </if>
      <if test="blogCategoryId != null">
        blog_category_id,
      </if>
      <if test="blogCategoryName != null">
        blog_category_name,
      </if>
      <if test="blogTags != null">
        blog_tags,
      </if>
      <if test="blogStatus != null">
        blog_status,
      </if>
      <if test="blogViews != null">
        blog_views,
      </if>
      <if test="enableComment != null">
        enable_comment,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="blogContent != null">
        blog_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="blogId != null">
        #{blogId,jdbcType=BIGINT},
      </if>
      <if test="blogTitle != null">
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogSubUrl != null">
        #{blogSubUrl,jdbcType=VARCHAR},
      </if>
      <if test="blogCoverImage != null">
        #{blogCoverImage,jdbcType=VARCHAR},
      </if>
      <if test="blogCategoryId != null">
        #{blogCategoryId,jdbcType=INTEGER},
      </if>
      <if test="blogCategoryName != null">
        #{blogCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="blogTags != null">
        #{blogTags,jdbcType=VARCHAR},
      </if>
      <if test="blogStatus != null">
        #{blogStatus,jdbcType=TINYINT},
      </if>
      <if test="blogViews != null">
        #{blogViews,jdbcType=BIGINT},
      </if>
      <if test="enableComment != null">
        #{enableComment,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogContent != null">
        #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
<!--      &lt;!&ndash;获得插入数据的id  拿到自增的主键值 &ndash;&gt;-->
<!--      <selectKey resultType="Long" keyProperty="blogId" order="AFTER">-->
<!--          select @@identity-->
<!--      </selectKey>-->
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.lou.springboot.entity.Blog">
    update tb_blog
    <set>
      <if test="blogTitle != null">
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogSubUrl != null">
        blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
      </if>
      <if test="blogCoverImage != null">
        blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
      </if>
      <if test="blogCategoryId != null">
        blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
      </if>
      <if test="blogCategoryName != null">
        blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
      </if>
      <if test="blogTags != null">
        blog_tags = #{blogTags,jdbcType=VARCHAR},
      </if>
      <if test="blogStatus != null">
        blog_status = #{blogStatus,jdbcType=TINYINT},
      </if>
      <if test="blogViews != null">
        blog_views = #{blogViews,jdbcType=BIGINT},
      </if>
      <if test="enableComment != null">
        enable_comment = #{enableComment,jdbcType=TINYINT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="blogContent != null">
        blog_content = #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lou.springboot.entity.Blog">
    update tb_blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
      blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
      blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
      blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
      blog_tags = #{blogTags,jdbcType=VARCHAR},
      blog_status = #{blogStatus,jdbcType=TINYINT},
      blog_views = #{blogViews,jdbcType=BIGINT},
      enable_comment = #{enableComment,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      blog_content = #{blogContent,jdbcType=LONGVARCHAR}
    where blog_id = #{blogId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lou.springboot.entity.Blog">
    update tb_blog
    set blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_sub_url = #{blogSubUrl,jdbcType=VARCHAR},
      blog_cover_image = #{blogCoverImage,jdbcType=VARCHAR},
      blog_category_id = #{blogCategoryId,jdbcType=INTEGER},
      blog_category_name = #{blogCategoryName,jdbcType=VARCHAR},
      blog_tags = #{blogTags,jdbcType=VARCHAR},
      blog_status = #{blogStatus,jdbcType=TINYINT},
      blog_views = #{blogViews,jdbcType=BIGINT},
      enable_comment = #{enableComment,jdbcType=TINYINT},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where blog_id = #{blogId,jdbcType=BIGINT}
  </update>
    <select id="selectByTagName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_blog_tag
        where tag_name = #{tagName,jdbcType=VARCHAR} AND is_deleted = 0
    </select>

    <insert id="batchInsertBlogTag" parameterType="java.util.List" useGeneratedKeys="true"
            keyProperty="tagId">
        INSERT into tb_blog_tag(tag_name)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.tagName,jdbcType=VARCHAR})
        </foreach>
    </insert>
    <insert id="batchInsert" parameterType="java.util.List">
        INSERT into tb_blog_tag_relation(blog_id,tag_id)
        VALUES
        <foreach collection="relationList" item="item" separator=",">
            (#{item.blogId,jdbcType=BIGINT},#{item.tagId,jdbcType=INTEGER})
        </foreach>
    </insert>

</mapper>
